
core:
  service_name: "litterbug"
  topics:
    # Odometry topic to subscribe to to understand
    # robot position
    odometry: "/odom"


map:
  # This is included to allow the setting and force
  # it to exist, but will fail if not specified at
  # some point. It is expected to be a pgm file as
  # generated by the cartographer module
  file: ""
  # The resolution of the map in meters per pixel
  resolution: 0.05
  # When the map is originally created, the robot is
  # assumed in ROS to be at (0.0, 0.0), which *might not
  # be true*. If not, this means that the global position
  # of the robot in the simulation versus map position
  # will be offset by this amount. This offset fixes
  # this when using the map for vision purposes. If the
  # map file has this added to it (IE its created from)
  # our helper class) this will be ignored.
  offset:
    - 0.0 # x
    - 0.0 # y

interaction:
  # How far away the robot can interact with objects
  # in meters
  range: 1.5
  # Assignment of topics for interaction
  topics:
    # Interaction broadcasts when any interaction by the
    # robot is occurring
    interaction: "/interaction"
  
  inventory:
    topics:
      pass

vision:
  # Whether or not litterbug will simulate mocked vision
  enable_simulation: False
  # Range is how far can the sensor see, in meters, from the
  # centroid of the robot (it's (x,y) coordinate).
  # minimum_range is the same
  range: 8.0
  minimum_range: 0.5


  # Error is the purposely introduced x/y/z error (in meters)
  # for broadcasted position, to be more realistic. The error
  # is added as Â±error to the real position with a uniform
  # distribution.
  error:
    x: 0.10
    y: 0.10
    z: 0.10

  # False negatives are a chance of an object being missed
  # by the camera for a given camera frame. If your FPS is
  # high enough you will need lower and lower percentages
  # to demonstrate full false negatives
  enable_false_negative: True
  # Probability of success distribution based on distance
  # from the robot, wherein the key is a distance in meters
  # The distance is considered at increasing ordered
  # distances. For example:
  #  0.5: 0.9
  #  1.0: 0.8
  #  2.0: 0.7
  #  3.5: 0.6
  # ...would mean an object 2.75 meters away has a 60%
  # chance of being spotted.
  # Also, this will break if you have a higher distance
  # have a higher percentage; so don't do that.
  false_negative_probability:
    0.5: 0.6
    1.5: 0.5
    4.0: 0.4

  # False Positives are a chance of an object being spotted
  # despite not existing. The object labels broadcasted are
  # from the pool of possible labels litterbug knows about.
  enable_false_positives: True
  # There are two types of false positives - ghost positives
  # (no object is spotted) and we broadcast anyway, and 
  # mislabels, where we on some probability incorrectly
  # label an object. Either can occur at any time as per
  # the real life vision models we're aiming to simulate.
  # Ghost positives are broadcasted at a distribution of
  # time based on how often you would like them broadcasted,
  # at a an expected rating of approximate time between in
  # seconds. For instance, if you want a ghost positive rate
  # of approximately once per minute (60 seconds for our
  # setting), and have a camera at 12 FPS, the probability
  # of a ghost positive at a given frame is 1/720, or 0.0014.
  # If the ghost positive setting is negative (ie -1) then
  # no ghost positives will be broadcasted, and only mislabels
  # will occur.
  ghost_positive_rate: 60.0
  # Mislabels are a chance of an object being labeled incorrectly
  # Note that there is no correlation between incorrect labels
  # like you might have in vision models
  mislabel_probability: 0.1

  

  # Field of view of the camera sensor in degrees
  fov: 45.0
  # How many frames per second should the vision sensor
  fps: 12
  # Assignment of topics for vision detection
  topics:
    # If you are using the default on_object_detected
    # function and litterbug ROS messages, then you
    # can configure the broadcast topic here. If you
    # are using your own function/messages, this does
    # nothing
    object_spotted: "/object_spotted"


gazebo:
  # service_name is the ROS2 service name the resulting
  # node for the litterbug_gazebo control node will have
  service_name: "litterbug_gazebo"
  # A list of all directories where models are expected
  # to exist. These are checked on startup
  models_directories:
    - "~/.gazebo/models"
  # Assignment of topics for the given plugins
  topics:
    spawn_entity: "/spawn_entity"
    delete_entity: "/delete_entity"
    get_model_list: "/get_model_list"
    get_entity_state: "/gazebo/get_entity_state"
    get_entity_exists: "/gazebo/get_entity_state"